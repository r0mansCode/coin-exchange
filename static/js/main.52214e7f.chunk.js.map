{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","components/ExchangeHeader/logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","components/Footer/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","Button","button","Coin","props","name","ticker","price","showBalance","balance","action","method","onClick","event","preventDefault","handleRefresh","tickerId","Table","table","CoinList","coinData","map","key","Section","section","AccountBalance","buttonText","content","btnHelicopterMoney","amount","handleHelicopter","handleBalanceVisibilityChange","Img","img","Header","header","H1","h1","ExchangeHeader","src","logo","alt","Component","Footer","className","href","Div","div","formatPrice","parseFloat","Number","toFixed","App","useState","setBalance","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","oldValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52214e7f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Td = styled.td`\r\n  border-bottom: 1px solid #cccccc;\r\n  width: 25vh;\r\n`;\r\n\r\n \r\nconst Button = styled.button`\r\n    font-size: 1rem;\r\n    margin: 0 1.5rem 0 1.5rem;\r\n    background-color: rgb(20, 56, 97);\r\n    color: #cccccc;\r\n    border: 1px solid #cccccc;\r\n    border-radius: 7px;\r\n`;\r\n\r\nexport default function Coin(props) {\r\n\r\n  const handleClick = (event) => {\r\n  //Prevent the degault action of submitting the form (refreshing the page)\r\n  event.preventDefault();\r\n\r\n  props.handleRefresh(props.tickerId);\r\n\r\n}\r\n\r\n        return (\r\n            <tr>\r\n              <Td>{props.name}</Td>\r\n              <Td>{props.ticker}</Td>\r\n              <Td>${props.price}</Td>\r\n              {props.showBalance ? <Td>{props.balance}</Td> : null}\r\n              <Td>\r\n                <form action=\"#\" method=\"POST\">\r\n                <Button onClick={handleClick}>Refresh</Button>\r\n                </form>\r\n              </Td>\r\n            </tr>\r\n          );\r\n        }\r\n\r\nCoin.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  ticker: PropTypes.string.isRequired,\r\n  price: PropTypes.number.isRequired\r\n}\r\n","import React from 'react';\r\nimport Coin from '../Coin/Coin';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  margin: 50px auto 200px auto;\r\n  display: inline-block;\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nexport default function CoinList(props) {\r\n    \r\n        return (\r\n            <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Ticker</th>\r\n                <th>Price</th>\r\n                {props.showBalance ? <th>Balance</th> : null}\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n          <tbody>\r\n            {\r\n              props.coinData.map( ({key, name, ticker, price, balance}) => \r\n                <Coin key={key} \r\n                      handleRefresh={props.handleRefresh}\r\n                      name={name} \r\n                      tickerId={key}\r\n                      ticker={ticker}\r\n                      showBalance={props.showBalance}\r\n                      balance={balance} \r\n                      price={price} />\r\n                )\r\n            }\r\n          </tbody>\r\n          </Table>\r\n        )\r\n    }\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'\r\n\r\nconst Section = styled.section`\r\n    font-size: 2rem;\r\n    text-align: left;\r\n    padding: 1.5rem 0 1.5rem 5rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    font-size: 1.4rem;\r\n    margin: 1.5rem 0 1.5rem 5rem;\r\n    background-color: rgb(20, 56, 97);\r\n    color: #cccccc;\r\n    border: 1px solid #cccccc;\r\n    border-radius: 7px;\r\n`;\r\n\r\n\r\n\r\nexport default function AccountBalance(props) {\r\n    \r\n    \r\n        const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\r\n        let content = null;\r\n        let btnHelicopterMoney = null;\r\n        if ( props.showBalance ) {\r\n            content = <>Balance ${props.amount}</>;\r\n        btnHelicopterMoney = <Button onClick = {props.handleHelicopter}>Add Helicopter Money</Button>;\r\n        }\r\n        return (\r\n            <Section>\r\n             {content} \r\n             <Button onClick={props.handleBalanceVisibilityChange}>{buttonText}</Button>\r\n             {btnHelicopterMoney}  \r\n            </Section>\r\n        );\r\n    }\r\n\r\n  ","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport logo from './logo.svg';\r\n\r\nconst Img = styled.img`\r\n    height: 8rem;\r\n    pointer-events: none;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    background-color: #282c34;\r\n    min-height: 20vh;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: (10px + 2vmin);\r\n    color: white;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n  font-size: 4rem;\r\n`;  \r\n\r\n\r\nexport default class ExchangeHeader extends Component {\r\n    render() {\r\n        return (\r\n               <Header>\r\n                <Img src={logo} alt=\"React logo\" />\r\n                <H1>\r\n                Coin exchange\r\n                </H1>\r\n                </Header> \r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './Footer.css'\r\n\r\nexport default function Footer(props) {\r\n    return (\r\n        <footer className=\"footer\">\r\n                <div>\r\n                    <p>Powered by <a className=\"link\" href=\"https://coinpaprika.com/\"> coinpaprika.com</a></p>\r\n                </div>\r\n        </footer>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance'\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport Footer from './components/Footer/Footer';\n\nconst Div = styled.div`\n  text-align: center;\n  background-color: rgb(20, 56, 97);\n  color: #cccccc;\n`;\n\n\nconst COIN_COUNT = 6;\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\n\nfunction App(props) {\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get( tickerUrl + id ));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response){\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price),\n      };\n    })\n    // Retrieve the prices\n    setCoinData(coinPriceData);\n  }\n\n  useEffect(function() {\n    if (coinData.length === 0) {\n      componentDidMount();  \n    } \n  });\n\n  \n\n  const handleBalanceVisibilityChange = () => {\n    setShowBalance(oldValue => !oldValue);\n  }\n\n  const handleHelicopter = () => {\n    setBalance(oldValue => oldValue + 1200);\n  }\n\n  const handleRefresh = async (valueChangeId) => {\n  const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n  const response = await axios.get(tickerUrl);\n  const newPrice = formatPrice(response.data.quotes.USD.price);\n  const newCoinData = coinData.map( function( values ) {\n    let newValues = { ...values };\n    if (valueChangeId === values.key ) {\n      newValues.price = newPrice;\n    }\n  return newValues;  \n  });\n  \n\n  setCoinData(newCoinData);\n}\n\n  \n    return (\n      <Div>\n          <ExchangeHeader/>\n          <AccountBalance \n          amount={balance} \n          showBalance = {showBalance}\n          handleBalanceVisibilityChange={handleBalanceVisibilityChange}\n          handleHelicopter = {handleHelicopter} \n          />\n          <CoinList\n           coinData={coinData}\n           showBalance = {showBalance} \n           handleRefresh={handleRefresh} />\n           <p>*The prices are refreshing every few minutes</p>\n           <Footer />\n      </Div>\n    );\n  }\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}