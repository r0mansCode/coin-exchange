{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","components/ExchangeHeader/logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","components/Footer/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","TdControls","TdName","Button","button","Coin","props","name","ticker","price","showBalance","balance","action","method","className","onClick","event","preventDefault","handleRefresh","tickerId","handleTransaction","Table","table","CoinList","coinData","map","key","Section","section","Balance","div","BalanceToggleButton","formatter","Intl","NumberFormat","style","currency","AccountBalance","buttonText","content","format","amount","buttonClass","handleBalanceVisibilityChange","handleBrrrr","Img","img","Header","header","H1","h1","ExchangeHeader","src","logo","alt","Component","Footer","href","Div","formatPrice","parseFloat","Number","toFixed","App","useState","setBalance","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","oldBalance","oldValue","isBuy","balanceChange","newCoindata","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3ac9d10.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Td = styled.td`\r\n    border: 1px solid #cccccc;\r\n    width 14vw;\r\n`;\r\n\r\nconst TdControls = styled(Td)`\r\n    width: 34vw;\r\n`;\r\n\r\nconst TdName = styled(Td)`\r\n    width: 24vw;\r\n`;\r\n \r\nconst Button = styled.button`\r\n    font-size: 1rem;\r\n    margin: 0 1.5rem 0 1.5rem;\r\n    border: 1px solid #cccccc;\r\n    border-radius: 7px;\r\n`;\r\n\r\nexport default function Coin(props) {\r\n\r\n  const handleRefresh = (event) => {\r\n  //Prevent the degault action of submitting the form (refreshing the page)\r\n  event.preventDefault();\r\n  props.handleRefresh(props.tickerId);\r\n}\r\n\r\nconst handleBuy = (event) => {\r\n  //Prevent the degault action of submitting the form (refreshing the page)\r\n  event.preventDefault();\r\n  props.handleTransaction(true, props.tickerId);\r\n}\r\n\r\nconst handleSell = (event) => {\r\n  //Prevent the degault action of submitting the form (refreshing the page)\r\n  event.preventDefault();\r\n  props.handleTransaction(false, props.tickerId);\r\n}\r\n\r\n        return (\r\n            <tr>\r\n              <TdName>{props.name}</TdName>\r\n              <Td>{props.ticker}</Td>\r\n              <Td>${props.price}</Td>\r\n              <Td>{props.showBalance ? props.balance : '-'}</Td>\r\n              <TdControls>\r\n                <form action=\"#\" method=\"POST\">\r\n                <Button className=\"btn btn-info\" onClick={handleRefresh}>Refresh</Button>\r\n                <Button className=\"btn btn-warning\" onClick={handleBuy}>Buy</Button>\r\n                <Button className=\"btn btn-danger\" onClick={handleSell}>Sell</Button>\r\n                </form>\r\n              </TdControls>\r\n            </tr>\r\n          );\r\n        }\r\n\r\nCoin.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  ticker: PropTypes.string.isRequired,\r\n  price: PropTypes.number.isRequired\r\n}\r\n","import React from 'react';\r\nimport Coin from '../Coin/Coin';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  margin: 50px auto 200px auto;\r\n  display: inline-block;\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nexport default function CoinList(props) {\r\n    \r\n        return (\r\n            <Table className=\"table table-primary table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Ticker</th>\r\n                <th>Price</th>\r\n                <th>Balance</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n          <tbody>\r\n            {\r\n              props.coinData.map( ({key, name, ticker, price, balance}) => \r\n                <Coin key={key} \r\n                      handleRefresh={props.handleRefresh}\r\n                      handleTransaction={props.handleTransaction}\r\n                      name={name} \r\n                      tickerId={key}\r\n                      ticker={ticker}\r\n                      showBalance={props.showBalance}\r\n                      balance={balance} \r\n                      price={price} />\r\n                )\r\n            }\r\n          </tbody>\r\n          </Table>\r\n        )\r\n    }\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'\r\n\r\nconst Section = styled.section`\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    padding: 1.5rem 0 1.5rem 5rem;\r\n`;\r\n\r\nconst Balance = styled.div`\r\n    min-width: 250px;\r\n    margin: 0.5rem 0 0 2.5rem;\r\n    font-size: 1.5rem;\r\n    vertical-align: left;\r\n    text-align: left;\r\n    `;\r\n\r\nconst Button = styled.button`\r\n    margin: 1.8px;\r\n    `;\r\n\r\nconst BalanceToggleButton = styled(Button)`\r\n    width: 150px;\r\n`;\r\n\r\nvar formatter = Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD'\r\n});\r\n\r\nexport default function AccountBalance(props) {\r\n    \r\n    \r\n        const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\r\n        let content = '\\u00A0';\r\n        if (props.showBalance) {\r\n            content = <>{ formatter.format(props.amount) }</>\r\n        }\r\n        const buttonClass = 'btn ' + (props.showBalance ? 'btn-warning' : 'btn-info');\r\n        return (\r\n            <>\r\n                <Balance>{content}</Balance>\r\n                <Section> \r\n                <BalanceToggleButton \r\n                    onClick={props.handleBalanceVisibilityChange}\r\n                        className={buttonClass}>\r\n                    {buttonText}\r\n                </BalanceToggleButton>\r\n                <Button className=\"btn btn-success\"\r\n                        onClick={props.handleBrrrr}>\r\n                    <i className=\"fas fa-helicopter\"></i>\r\n                </Button>\r\n                </Section>\r\n                </>\r\n            );\r\n    }\r\n\r\n  ","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport logo from './logo.svg';\r\n\r\nconst Img = styled.img`\r\n    height: 8rem;\r\n    pointer-events: none;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    background-color: #282c34;\r\n    min-height: 10vh;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: (10px + 2vmin);\r\n    color: white;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n  font-size: 4rem;\r\n`;  \r\n\r\n\r\nexport default class ExchangeHeader extends Component {\r\n    render() {\r\n        return (\r\n               <Header>\r\n                <Img src={logo} alt=\"React logo\" />\r\n                <H1>\r\n                Coin exchange\r\n                </H1>\r\n                </Header> \r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './Footer.css'\r\n\r\nexport default function Footer(props) {\r\n    return (\r\n        <footer className=\"footer\">\r\n                <div>\r\n                    <p>Powered by <a className=\"link\" href=\"https://coinpaprika.com/\"> coinpaprika.com</a></p>\r\n                </div>\r\n        </footer>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance'\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport Footer from './components/Footer/Footer';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\n\nimport '@fortawesome/fontawesome-free/js/all';\n\nconst Div = styled.div`\n  text-align: center;\n  background-color: rgb(20, 56, 97);\n  color: #cccccc;\n`;\n\n\nconst COIN_COUNT = 6;\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\n\nfunction App(props) {\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(false);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get( tickerUrl + id ));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response){\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price),\n      };\n    })\n    // Retrieve the prices\n    setCoinData(coinPriceData);\n  }\n\n  useEffect(function() {\n    if (coinData.length === 0) {\n      componentDidMount();  \n    } \n  });\n\n  const handleBrrrr = () => {\n    setBalance( oldBalance => oldBalance + 1200 );\n  }\n\n  const handleBalanceVisibilityChange = () => {\n    setShowBalance(oldValue => !oldValue);\n  }\n\n  const handleTransaction = (isBuy, valueChangeId) => {\n    var balanceChange = isBuy ? 1 : -1;\n    const newCoindata = coinData.map( function(values) {\n      let newValues = {...values};\n      if ( valueChangeId == values.key) {\n        newValues.balance += balanceChange;\n        setBalance( oldBalance => oldBalance - balanceChange * newValues.price );\n      }\n      return newValues;\n    });\n    setCoinData(newCoindata);\n  }\n\n  const handleRefresh = async (valueChangeId) => {\n  const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n  const response = await axios.get(tickerUrl);\n  const newPrice = formatPrice(response.data.quotes.USD.price);\n  const newCoinData = coinData.map( function( values ) {\n    let newValues = { ...values };\n    if (valueChangeId === values.key ) {\n      newValues.price = newPrice;\n    }\n  return newValues;  \n  });\n  \n\n  setCoinData(newCoinData);\n}\n\n  \n    return (\n      <Div>\n          <ExchangeHeader/>\n          <AccountBalance \n          amount={balance} \n          showBalance = {showBalance}\n          handleBrrrr = {handleBrrrr}\n          handleBalanceVisibilityChange={handleBalanceVisibilityChange} \n          />\n          <CoinList\n           coinData={coinData}\n           showBalance = {showBalance} \n           handleTransaction={handleTransaction}\n           handleRefresh={handleRefresh} />\n           <p>*The prices are refreshing every few minutes</p>\n           <Footer />\n      </Div>\n    );\n  }\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}